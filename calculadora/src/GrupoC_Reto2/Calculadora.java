package GrupoC_Reto2;
//Import o package

package logaritmos1;//PARA LOS LOGARITMOS 
/*NotaS 
 *
 *Diseño
 *borderPinted  y  contentAreafilled   (NO)
 *
 *Volver un INTEGER a nr1  
 *int nr1 = Integer.parseInt(jTxtHistoria.getText());

 *NAGREGAR SIN MODIFICAR TEXTO DE jTxtResultado
 *jTxtResultado.setText(jTxtResultado.getText() );
 */
/**
 *
 * @author ANGELO
 */
public class Calculadora extends javax.swing.JFrame {
//Variables     ↓    ↓    ↓    ↓    ↓    ↓

    char operador;
    Double nr1, nr2, resultado = 0.0;

    /*temp ---Viene de temporal, funciona como un auxiliar, se creara esta variable 
     * para que funcione correctamente el boton PUNTO y el Boton para 
     *eliminar el ultimo digito ingresado.
     * ↓    ↓    ↓    ↓    ↓    ↓    ↓
     */
    public Calculadora() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        jPanelCientifico = new javax.swing.JPanel();
        jBtnLogaritmoPI = new javax.swing.JButton();
        jBtnValorAbsoluto = new javax.swing.JButton();
        jBtnLogaritmo = new javax.swing.JButton();
        jBtnCoseno = new javax.swing.JButton();
        jBtnSeno = new javax.swing.JButton();
        jBtnSecante = new javax.swing.JButton();
        jBtnTangente = new javax.swing.JButton();
        jBtnCotangente = new javax.swing.JButton();
        jBtnCosecante = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanelOperacionesBasicas = new javax.swing.JPanel();
        jBtnRaizN = new javax.swing.JButton();
        jBtnDivision = new javax.swing.JButton();
        jBtnRestar = new javax.swing.JButton();
        jBtnIgual = new javax.swing.JButton();
        jBtnPorcentaje = new javax.swing.JButton();
        jBtnLimpiarUno = new javax.swing.JButton();
        jBtnPotencia2 = new javax.swing.JButton();
        jBtnLimpiar = new javax.swing.JButton();
        jBtnSumar = new javax.swing.JButton();
        jBtnMultiplicar = new javax.swing.JButton();
        jBtnPotenciaN = new javax.swing.JButton();
        jBtnResiduo = new javax.swing.JButton();
        jPanelNumeros = new javax.swing.JPanel();
        jBtn0 = new javax.swing.JButton();
        jBtn1 = new javax.swing.JButton();
        jBtn2 = new javax.swing.JButton();
        jBtn3 = new javax.swing.JButton();
        jBtn4 = new javax.swing.JButton();
        jBtn5 = new javax.swing.JButton();
        jBtn6 = new javax.swing.JButton();
        jBtn7 = new javax.swing.JButton();
        jBtn8 = new javax.swing.JButton();
        jBtn9 = new javax.swing.JButton();
        jBtnMasMenos = new javax.swing.JButton();
        jBtnPunto = new javax.swing.JButton();
        jLabelPanelHistoriaYResultado = new javax.swing.JPanel();
        jTxtHistoria = new javax.swing.JLabel();
        jTxtResultado = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jBtnFactorial = new javax.swing.JButton();
        jBtnCapicua = new javax.swing.JButton();
        jBtnFibonacci = new javax.swing.JButton();
        jBtnPerfecto = new javax.swing.JButton();
        jBtnPrimo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuCalculadoraLogaritmica = new javax.swing.JMenu();
        jMenuCalculadoraBasica = new javax.swing.JMenuItem();
        jMenuCalculadoraCientifica = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuConvertidor = new javax.swing.JMenu();
        jMenuNuevoConvertidos = new javax.swing.JMenuItem();
        jMenuBingoAmericano = new javax.swing.JMenu();
        jMenuNuevoBingo = new javax.swing.JMenuItem();
        jMenuRifaCovid = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel.setBackground(new java.awt.Color(220, 255, 255));

        jPanelCientifico.setBackground(new java.awt.Color(255, 255, 255));

        jBtnLogaritmoPI.setBackground(new java.awt.Color(255, 255, 255));
        jBtnLogaritmoPI.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnLogaritmoPI.setText("Ln(pi)");
        jBtnLogaritmoPI.setActionCommand("");
        jBtnLogaritmoPI.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnLogaritmoPI.setBorderPainted(false);
        jBtnLogaritmoPI.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnLogaritmoPI.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnLogaritmoPI.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnLogaritmoPI.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnLogaritmoPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLogaritmoPIActionPerformed(evt);
            }
        });

        jBtnValorAbsoluto.setBackground(new java.awt.Color(255, 255, 255));
        jBtnValorAbsoluto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnValorAbsoluto.setText("Val. Absoluto");
        jBtnValorAbsoluto.setActionCommand("");
        jBtnValorAbsoluto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnValorAbsoluto.setBorderPainted(false);
        jBtnValorAbsoluto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnValorAbsoluto.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnValorAbsoluto.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnValorAbsoluto.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnValorAbsoluto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnValorAbsolutoActionPerformed(evt);
            }
        });

        jBtnLogaritmo.setBackground(new java.awt.Color(255, 255, 255));
        jBtnLogaritmo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnLogaritmo.setText("Logaritmo");
        jBtnLogaritmo.setActionCommand("");
        jBtnLogaritmo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnLogaritmo.setBorderPainted(false);
        jBtnLogaritmo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnLogaritmo.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnLogaritmo.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnLogaritmo.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnLogaritmo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLogaritmoActionPerformed(evt);
            }
        });

        jBtnCoseno.setBackground(new java.awt.Color(255, 255, 255));
        jBtnCoseno.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnCoseno.setText("Coseno");
        jBtnCoseno.setActionCommand("");
        jBtnCoseno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnCoseno.setBorderPainted(false);
        jBtnCoseno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnCoseno.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnCoseno.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnCoseno.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnCoseno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCosenoActionPerformed(evt);
            }
        });

        jBtnSeno.setBackground(new java.awt.Color(255, 255, 255));
        jBtnSeno.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnSeno.setText("Seno");
        jBtnSeno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnSeno.setBorderPainted(false);
        jBtnSeno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnSeno.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnSeno.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnSeno.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnSeno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSenoActionPerformed(evt);
            }
        });

        jBtnSecante.setBackground(new java.awt.Color(255, 255, 255));
        jBtnSecante.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnSecante.setText("Secante");
        jBtnSecante.setActionCommand("");
        jBtnSecante.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnSecante.setBorderPainted(false);
        jBtnSecante.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnSecante.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnSecante.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnSecante.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnSecante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSecanteActionPerformed(evt);
            }
        });

        jBtnTangente.setBackground(new java.awt.Color(255, 255, 255));
        jBtnTangente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnTangente.setText("Tangente");
        jBtnTangente.setActionCommand("");
        jBtnTangente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnTangente.setBorderPainted(false);
        jBtnTangente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnTangente.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnTangente.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnTangente.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnTangente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTangenteActionPerformed(evt);
            }
        });

        jBtnCotangente.setBackground(new java.awt.Color(255, 255, 255));
        jBtnCotangente.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnCotangente.setText("Cotangente");
        jBtnCotangente.setActionCommand("");
        jBtnCotangente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnCotangente.setBorderPainted(false);
        jBtnCotangente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnCotangente.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnCotangente.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnCotangente.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnCotangente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCotangenteActionPerformed(evt);
            }
        });

        jBtnCosecante.setBackground(new java.awt.Color(255, 255, 255));
        jBtnCosecante.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnCosecante.setText("Cosecante");
        jBtnCosecante.setActionCommand("");
        jBtnCosecante.setBorder(null);
        jBtnCosecante.setBorderPainted(false);
        jBtnCosecante.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnCosecante.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnCosecante.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnCosecante.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnCosecante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCosecanteActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("↓  FUNCIONES TRIGONOMETRICAS  ↓");

        javax.swing.GroupLayout jPanelCientificoLayout = new javax.swing.GroupLayout(jPanelCientifico);
        jPanelCientifico.setLayout(jPanelCientificoLayout);
        jPanelCientificoLayout.setHorizontalGroup(
            jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCientificoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelCientificoLayout.createSequentialGroup()
                        .addComponent(jBtnSeno, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnCoseno, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCientificoLayout.createSequentialGroup()
                        .addComponent(jBtnTangente, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnCotangente, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCientificoLayout.createSequentialGroup()
                        .addComponent(jBtnSecante, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnCosecante, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelCientificoLayout.createSequentialGroup()
                        .addComponent(jBtnLogaritmo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnValorAbsoluto, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnLogaritmoPI, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanelCientificoLayout.setVerticalGroup(
            jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCientificoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnLogaritmoPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnLogaritmo, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnValorAbsoluto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelCientificoLayout.createSequentialGroup()
                        .addGroup(jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnSeno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnCoseno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnTangente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnCotangente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(66, 66, 66))
                    .addGroup(jPanelCientificoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnSecante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnCosecante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(17, 17, 17))
        );

        jPanelOperacionesBasicas.setBackground(new java.awt.Color(255, 255, 255));

        jBtnRaizN.setBackground(new java.awt.Color(255, 255, 255));
        jBtnRaizN.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnRaizN.setText("n√");
        jBtnRaizN.setActionCommand("null");
        jBtnRaizN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnRaizN.setBorderPainted(false);
        jBtnRaizN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnRaizN.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnRaizN.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnRaizN.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnRaizN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRaizNActionPerformed(evt);
            }
        });

        jBtnDivision.setBackground(new java.awt.Color(255, 255, 255));
        jBtnDivision.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnDivision.setText("/");
        jBtnDivision.setActionCommand("null");
        jBtnDivision.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnDivision.setBorderPainted(false);
        jBtnDivision.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnDivision.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnDivision.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnDivision.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDivisionActionPerformed(evt);
            }
        });

        jBtnRestar.setBackground(new java.awt.Color(255, 255, 255));
        jBtnRestar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnRestar.setText("-");
        jBtnRestar.setActionCommand("null");
        jBtnRestar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnRestar.setBorderPainted(false);
        jBtnRestar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnRestar.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnRestar.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnRestar.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnRestar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRestarActionPerformed(evt);
            }
        });

        jBtnIgual.setBackground(new java.awt.Color(255, 255, 255));
        jBtnIgual.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnIgual.setText("=");
        jBtnIgual.setActionCommand("null");
        jBtnIgual.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnIgual.setBorderPainted(false);
        jBtnIgual.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnIgual.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnIgual.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnIgual.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnIgual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnIgualActionPerformed(evt);
            }
        });

        jBtnPorcentaje.setBackground(new java.awt.Color(255, 255, 255));
        jBtnPorcentaje.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnPorcentaje.setText("%");
        jBtnPorcentaje.setActionCommand("null");
        jBtnPorcentaje.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnPorcentaje.setBorderPainted(false);
        jBtnPorcentaje.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnPorcentaje.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnPorcentaje.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnPorcentaje.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnPorcentaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPorcentajeActionPerformed(evt);
            }
        });

        jBtnLimpiarUno.setBackground(new java.awt.Color(255, 255, 255));
        jBtnLimpiarUno.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnLimpiarUno.setText("←");
        jBtnLimpiarUno.setActionCommand("null");
        jBtnLimpiarUno.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnLimpiarUno.setBorderPainted(false);
        jBtnLimpiarUno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnLimpiarUno.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnLimpiarUno.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnLimpiarUno.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnLimpiarUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarUnoActionPerformed(evt);
            }
        });

        jBtnPotencia2.setBackground(new java.awt.Color(255, 255, 255));
        jBtnPotencia2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnPotencia2.setText("^2");
        jBtnPotencia2.setActionCommand("null");
        jBtnPotencia2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnPotencia2.setBorderPainted(false);
        jBtnPotencia2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnPotencia2.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnPotencia2.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnPotencia2.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnPotencia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPotencia2ActionPerformed(evt);
            }
        });

        jBtnLimpiar.setBackground(new java.awt.Color(255, 255, 255));
        jBtnLimpiar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnLimpiar.setText("C");
        jBtnLimpiar.setActionCommand("null");
        jBtnLimpiar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnLimpiar.setBorderPainted(false);
        jBtnLimpiar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnLimpiar.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnLimpiar.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnLimpiar.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLimpiarActionPerformed(evt);
            }
        });

        jBtnSumar.setBackground(new java.awt.Color(255, 255, 255));
        jBtnSumar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnSumar.setText("+");
        jBtnSumar.setActionCommand("null");
        jBtnSumar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnSumar.setBorderPainted(false);
        jBtnSumar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnSumar.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnSumar.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnSumar.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnSumar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSumarActionPerformed(evt);
            }
        });

        jBtnMultiplicar.setBackground(new java.awt.Color(255, 255, 255));
        jBtnMultiplicar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnMultiplicar.setText("*");
        jBtnMultiplicar.setActionCommand("null");
        jBtnMultiplicar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnMultiplicar.setBorderPainted(false);
        jBtnMultiplicar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnMultiplicar.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnMultiplicar.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnMultiplicar.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnMultiplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnMultiplicarActionPerformed(evt);
            }
        });

        jBtnPotenciaN.setBackground(new java.awt.Color(255, 255, 255));
        jBtnPotenciaN.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnPotenciaN.setText("^n");
        jBtnPotenciaN.setActionCommand("null");
        jBtnPotenciaN.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnPotenciaN.setBorderPainted(false);
        jBtnPotenciaN.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnPotenciaN.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnPotenciaN.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnPotenciaN.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnPotenciaN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPotenciaNActionPerformed(evt);
            }
        });

        jBtnResiduo.setBackground(new java.awt.Color(255, 255, 255));
        jBtnResiduo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnResiduo.setText("Res");
        jBtnResiduo.setActionCommand("null");
        jBtnResiduo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnResiduo.setBorderPainted(false);
        jBtnResiduo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnResiduo.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnResiduo.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnResiduo.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnResiduo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnResiduoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOperacionesBasicasLayout = new javax.swing.GroupLayout(jPanelOperacionesBasicas);
        jPanelOperacionesBasicas.setLayout(jPanelOperacionesBasicasLayout);
        jPanelOperacionesBasicasLayout.setHorizontalGroup(
            jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacionesBasicasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelOperacionesBasicasLayout.createSequentialGroup()
                        .addComponent(jBtnResiduo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnIgual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelOperacionesBasicasLayout.createSequentialGroup()
                        .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jBtnRestar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBtnDivision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBtnSumar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnMultiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jBtnPorcentaje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jBtnRaizN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jBtnLimpiarUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnPotencia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnPotenciaN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanelOperacionesBasicasLayout.setVerticalGroup(
            jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacionesBasicasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelOperacionesBasicasLayout.createSequentialGroup()
                        .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnLimpiarUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnRaizN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtnSumar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanelOperacionesBasicasLayout.createSequentialGroup()
                        .addComponent(jBtnPotenciaN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnPotencia2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelOperacionesBasicasLayout.createSequentialGroup()
                        .addComponent(jBtnRestar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnMultiplicar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnDivision, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPorcentaje, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperacionesBasicasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnIgual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnResiduo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanelNumeros.setBackground(new java.awt.Color(255, 255, 255));

        jBtn0.setBackground(new java.awt.Color(255, 255, 255));
        jBtn0.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn0.setText("0");
        jBtn0.setActionCommand("null");
        jBtn0.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn0.setBorderPainted(false);
        jBtn0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn0.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn0.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn0.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn0ActionPerformed(evt);
            }
        });

        jBtn1.setBackground(new java.awt.Color(255, 255, 255));
        jBtn1.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn1.setText("1");
        jBtn1.setActionCommand("null");
        jBtn1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn1.setBorderPainted(false);
        jBtn1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn1.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn1.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn1.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn1ActionPerformed(evt);
            }
        });

        jBtn2.setBackground(new java.awt.Color(255, 255, 255));
        jBtn2.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn2.setText("2");
        jBtn2.setActionCommand("null");
        jBtn2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn2.setBorderPainted(false);
        jBtn2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn2.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn2.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn2.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn2ActionPerformed(evt);
            }
        });

        jBtn3.setBackground(new java.awt.Color(255, 255, 255));
        jBtn3.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn3.setText("3");
        jBtn3.setActionCommand("null");
        jBtn3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn3.setBorderPainted(false);
        jBtn3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn3.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn3.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn3.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn3ActionPerformed(evt);
            }
        });

        jBtn4.setBackground(new java.awt.Color(255, 255, 255));
        jBtn4.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn4.setText("4");
        jBtn4.setActionCommand("null");
        jBtn4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn4.setBorderPainted(false);
        jBtn4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn4.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn4.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn4.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn4ActionPerformed(evt);
            }
        });

        jBtn5.setBackground(new java.awt.Color(255, 255, 255));
        jBtn5.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn5.setText("5");
        jBtn5.setActionCommand("null");
        jBtn5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn5.setBorderPainted(false);
        jBtn5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn5.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn5.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn5.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn5ActionPerformed(evt);
            }
        });

        jBtn6.setBackground(new java.awt.Color(255, 255, 255));
        jBtn6.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn6.setText("6");
        jBtn6.setActionCommand("null");
        jBtn6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn6.setBorderPainted(false);
        jBtn6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn6.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn6.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn6.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn6ActionPerformed(evt);
            }
        });

        jBtn7.setBackground(new java.awt.Color(255, 255, 255));
        jBtn7.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn7.setText("7");
        jBtn7.setActionCommand("null");
        jBtn7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn7.setBorderPainted(false);
        jBtn7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn7.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn7.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn7.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn7ActionPerformed(evt);
            }
        });

        jBtn8.setBackground(new java.awt.Color(255, 255, 255));
        jBtn8.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn8.setText("8");
        jBtn8.setActionCommand("null");
        jBtn8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn8.setBorderPainted(false);
        jBtn8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn8.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn8.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn8.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn8ActionPerformed(evt);
            }
        });

        jBtn9.setBackground(new java.awt.Color(255, 255, 255));
        jBtn9.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtn9.setText("9");
        jBtn9.setActionCommand("null");
        jBtn9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtn9.setBorderPainted(false);
        jBtn9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtn9.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtn9.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtn9.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn9ActionPerformed(evt);
            }
        });

        jBtnMasMenos.setBackground(new java.awt.Color(255, 255, 255));
        jBtnMasMenos.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtnMasMenos.setText("+/-");
        jBtnMasMenos.setActionCommand("null");
        jBtnMasMenos.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnMasMenos.setBorderPainted(false);
        jBtnMasMenos.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnMasMenos.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtnMasMenos.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtnMasMenos.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtnMasMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnMasMenosActionPerformed(evt);
            }
        });

        jBtnPunto.setBackground(new java.awt.Color(255, 255, 255));
        jBtnPunto.setFont(new java.awt.Font("Arial", 0, 26)); // NOI18N
        jBtnPunto.setText(".");
        jBtnPunto.setActionCommand("null");
        jBtnPunto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnPunto.setBorderPainted(false);
        jBtnPunto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnPunto.setMaximumSize(new java.awt.Dimension(80, 80));
        jBtnPunto.setMinimumSize(new java.awt.Dimension(80, 80));
        jBtnPunto.setPreferredSize(new java.awt.Dimension(80, 80));
        jBtnPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPuntoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNumerosLayout = new javax.swing.GroupLayout(jPanelNumeros);
        jPanelNumeros.setLayout(jPanelNumerosLayout);
        jPanelNumerosLayout.setHorizontalGroup(
            jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNumerosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtn7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnMasMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtn0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jBtn6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtn9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnPunto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBtn3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelNumerosLayout.setVerticalGroup(
            jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNumerosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtn7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtn4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtn3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtnMasMenos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelNumerosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtn0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnPunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jLabelPanelHistoriaYResultado.setBackground(new java.awt.Color(255, 255, 255));

        jTxtHistoria.setBackground(new java.awt.Color(255, 255, 255));
        jTxtHistoria.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jTxtHistoria.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jTxtResultado.setBackground(new java.awt.Color(204, 255, 204));
        jTxtResultado.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jTxtResultado.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jLabelPanelHistoriaYResultadoLayout = new javax.swing.GroupLayout(jLabelPanelHistoriaYResultado);
        jLabelPanelHistoriaYResultado.setLayout(jLabelPanelHistoriaYResultadoLayout);
        jLabelPanelHistoriaYResultadoLayout.setHorizontalGroup(
            jLabelPanelHistoriaYResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLabelPanelHistoriaYResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLabelPanelHistoriaYResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTxtHistoria, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
                    .addComponent(jTxtResultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jLabelPanelHistoriaYResultadoLayout.setVerticalGroup(
            jLabelPanelHistoriaYResultadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLabelPanelHistoriaYResultadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTxtHistoria, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTxtResultado, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jBtnFactorial.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnFactorial.setText("Factorial");
        jBtnFactorial.setActionCommand("");
        jBtnFactorial.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnFactorial.setContentAreaFilled(false);
        jBtnFactorial.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnFactorial.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnFactorial.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnFactorial.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnFactorialActionPerformed(evt);
            }
        });

        jBtnCapicua.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnCapicua.setText("Capicua");
        jBtnCapicua.setActionCommand("");
        jBtnCapicua.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnCapicua.setContentAreaFilled(false);
        jBtnCapicua.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnCapicua.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnCapicua.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnCapicua.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnCapicua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCapicuaActionPerformed(evt);
            }
        });

        jBtnFibonacci.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnFibonacci.setText("Cant. Fibonacci");
        jBtnFibonacci.setActionCommand("");
        jBtnFibonacci.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnFibonacci.setContentAreaFilled(false);
        jBtnFibonacci.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnFibonacci.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnFibonacci.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnFibonacci.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnFibonacci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnFibonacciActionPerformed(evt);
            }
        });

        jBtnPerfecto.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnPerfecto.setText("Perfecto");
        jBtnPerfecto.setActionCommand("");
        jBtnPerfecto.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnPerfecto.setContentAreaFilled(false);
        jBtnPerfecto.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnPerfecto.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnPerfecto.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnPerfecto.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnPerfecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPerfectoActionPerformed(evt);
            }
        });

        jBtnPrimo.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jBtnPrimo.setText("Primo");
        jBtnPrimo.setActionCommand("");
        jBtnPrimo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jBtnPrimo.setContentAreaFilled(false);
        jBtnPrimo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jBtnPrimo.setMaximumSize(new java.awt.Dimension(60, 60));
        jBtnPrimo.setMinimumSize(new java.awt.Dimension(60, 60));
        jBtnPrimo.setPreferredSize(new java.awt.Dimension(60, 60));
        jBtnPrimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPrimoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jBtnPerfecto, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnCapicua, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnFibonacci, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnPrimo, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(36, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jBtnPrimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnPerfecto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnCapicua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnFibonacci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPanelHistoriaYResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(jPanelNumeros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelOperacionesBasicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jPanelCientifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(71, 71, 71)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelPanelHistoriaYResultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelOperacionesBasicas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanelNumeros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanelCientifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(128, 128, 128))
        );

        jMenuCalculadoraLogaritmica.setText("Calculadora");

        jMenuCalculadoraBasica.setText("Caculadora basica");
        jMenuCalculadoraBasica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCalculadoraBasicaActionPerformed(evt);
            }
        });
        jMenuCalculadoraLogaritmica.add(jMenuCalculadoraBasica);

        jMenuCalculadoraCientifica.setText("Calculadora cientifica");
        jMenuCalculadoraCientifica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCalculadoraCientificaActionPerformed(evt);
            }
        });
        jMenuCalculadoraLogaritmica.add(jMenuCalculadoraCientifica);

        jMenuItem1.setText("Calculadora logaritmica");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuCalculadoraLogaritmica.add(jMenuItem1);

        jMenuBar1.add(jMenuCalculadoraLogaritmica);

        jMenuConvertidor.setText("Convertidor de medidas");
        jMenuConvertidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuConvertidorActionPerformed(evt);
            }
        });

        jMenuNuevoConvertidos.setText("NUEVO CONVERTIDOR");
        jMenuConvertidor.add(jMenuNuevoConvertidos);

        jMenuBar1.add(jMenuConvertidor);

        jMenuBingoAmericano.setText("Bingo Americano");
        jMenuBingoAmericano.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuBingoAmericanoActionPerformed(evt);
            }
        });

        jMenuNuevoBingo.setText("BINGO");
        jMenuNuevoBingo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuNuevoBingoActionPerformed(evt);
            }
        });
        jMenuBingoAmericano.add(jMenuNuevoBingo);

        jMenuBar1.add(jMenuBingoAmericano);

        jMenuRifaCovid.setText("Rifa Covid");
        jMenuRifaCovid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuRifaCovidActionPerformed(evt);
            }
        });

        jMenuItem2.setText("NUEVA RIFA COVID");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuRifaCovid.add(jMenuItem2);

        jMenuBar1.add(jMenuRifaCovid);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 617, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//RESULTADO DE LA OPERACION     ↓    ↓    ↓    ↓    ↓    ↓    ↓ 
    private void jMenuCalculadoraBasicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCalculadoraBasicaActionPerformed
        setResizable(true);
        setSize(500, 678);
        jLabelPanelHistoriaYResultado.setSize(461, 678);

    }//GEN-LAST:event_jMenuCalculadoraBasicaActionPerformed

    private void jMenuCalculadoraCientificaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCalculadoraCientificaActionPerformed
        setResizable(true);
        setSize(970, 653);
        jTxtHistoria.setSize(1, 1);
        jTxtResultado.setSize(1, 1);
        jLabelPanelHistoriaYResultado.setSize(1, 1);

    }//GEN-LAST:event_jMenuCalculadoraCientificaActionPerformed

//GEN-FIRST:event_jBtnProductoActionPerformed

//GEN-LAST:event_jBtnProductoActionPerformed

//BOTON PUNTO .  ↓    ↓    ↓    ↓    ↓
    private void jBtnPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPuntoActionPerformed
        //        temp = jTxtHistoria.getText();
        //        jTxtHistoria.setText(temp + ".");
        //        temp += jTxtHistoria.getText();
        if (!jTxtHistoria.getText().contains(".")) {
            jTxtHistoria.setText(jTxtHistoria.getText() + jBtnPunto.getText());
        }
    }//GEN-LAST:event_jBtnPuntoActionPerformed

// Alternar entre positivo y negativo +/-
    private void jBtnMasMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnMasMenosActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            nr1 = nr1 * (-1);
            jTxtHistoria.setText(String.valueOf(nr1));
        }
    }//GEN-LAST:event_jBtnMasMenosActionPerformed

//Boton 9 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn9ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn9.getText());
    }//GEN-LAST:event_jBtn9ActionPerformed

//Boton 8 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn8ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn8.getText());
    }//GEN-LAST:event_jBtn8ActionPerformed

//Boton 7 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn7ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn7.getText());
    }//GEN-LAST:event_jBtn7ActionPerformed

//Boton 6 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn6ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn6.getText());
    }//GEN-LAST:event_jBtn6ActionPerformed

//Boton 5 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn5ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn5.getText());
    }//GEN-LAST:event_jBtn5ActionPerformed

//Boton 4 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn4ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn4.getText());
    }//GEN-LAST:event_jBtn4ActionPerformed

//Boton 3 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn3ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn3.getText());
    }//GEN-LAST:event_jBtn3ActionPerformed

//Boton 2 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn2ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn2.getText());
    }//GEN-LAST:event_jBtn2ActionPerformed

//Boton 1 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn1ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn1.getText());
    }//GEN-LAST:event_jBtn1ActionPerformed

//Boton 0 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    private void jBtn0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn0ActionPerformed
        jTxtHistoria.setText(jTxtHistoria.getText() + jBtn0.getText());
    }//GEN-LAST:event_jBtn0ActionPerformed

    private void jBtnResiduoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnResiduoActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = 'r';
        }

        jTxtHistoria.setText("");
    }//GEN-LAST:event_jBtnResiduoActionPerformed

//BOTON Potencia N   ↓    ↓    ↓    ↓    ↓
    private void jBtnPotenciaNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPotenciaNActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = 'n';
        }

        jTxtHistoria.setText("");
    }//GEN-LAST:event_jBtnPotenciaNActionPerformed

//BOTON Raiz N   ↓    ↓    ↓    ↓    ↓
    private void jBtnMultiplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnMultiplicarActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = '*';
        }

        jTxtHistoria.setText("");
    }//GEN-LAST:event_jBtnMultiplicarActionPerformed

//BOTON Sumar  ↓    ↓    ↓    ↓    ↓
    private void jBtnSumarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSumarActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = '+';
        }

        jTxtHistoria.setText("");
    }//GEN-LAST:event_jBtnSumarActionPerformed

//BOTON Borrar todo  ↓    ↓    ↓    ↓    ↓ C=CLEAR  ↓    ↓    ↓    ↓    ↓
    private void jBtnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarActionPerformed
        jTxtHistoria.setText("");

        jTxtResultado.setText("0");//Para dejar en el cuadro resultado, un cero
    }//GEN-LAST:event_jBtnLimpiarActionPerformed

//BOTON Potencia 2   ↓    ↓    ↓    ↓    ↓
    private void jBtnPotencia2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPotencia2ActionPerformed

        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            nr1 = (nr1 * nr1);
            jTxtResultado.setText(String.valueOf(nr1));
        }
    }//GEN-LAST:event_jBtnPotencia2ActionPerformed

//BOTON Limpiar de uno en uno, borrar el ultimo digito   ↓    ↓    ↓    ↓    ↓
    private void jBtnLimpiarUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLimpiarUnoActionPerformed
        //BOTON BORRAR EL ULTIMO DIGITO
        //Se declara la variable temp2, con el fin de que yude se elimine el ultimo digito ingresado .  ↓    ↓    ↓    ↓    ↓
        String BorrarUno = "";
        for (int i = 0; i < jTxtHistoria.getText().length() - 1; i++) {

            BorrarUno = BorrarUno + jTxtHistoria.getText().charAt(i); // Uso charAt() que devuelve un nuevo String de una cadena.
        }
        jTxtHistoria.setText(BorrarUno);
        //temp ahora tendra el valor de temp2, esto para que no ocurra error
    }//GEN-LAST:event_jBtnLimpiarUnoActionPerformed

//BOTON Porcentaje   ↓    ↓    ↓    ↓    ↓
    private void jBtnPorcentajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPorcentajeActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = '%';
        }

        jTxtHistoria.setText("");
    }//GEN-LAST:event_jBtnPorcentajeActionPerformed

    private void jBtnIgualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnIgualActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr2 = Double.parseDouble(jTxtHistoria.getText());//IMPORTANTE el if es necesario para funcionar sin error
        }
        switch (operador) {
            case '+'://Funcion Suma     ↓    ↓    ↓    ↓    ↓
                jTxtResultado.setText(Double.toString(nr1 + nr2));
                //jTxtHistoria.setText(nr1+"+"+nr2);
                break;//Sirve para terminar el bucle sin esto continuaria ejecutandose.
            case '-'://Funcion Resta     ↓    ↓    ↓    ↓    ↓
                jTxtResultado.setText(Double.toString(nr1 - nr2));
                //jTxtHistoria.setText(nr1+"-"+nr2);
                break;
            case '*'://Funcion Multiplicar     ↓    ↓    ↓    ↓    ↓
                jTxtResultado.setText(Double.toString(nr1 * nr2));
                //jTxtHistoria.setText(nr1+"*"+nr2);
                break;
            case '/'://Funcion Dividir    ↓    ↓    ↓    ↓    ↓
                jTxtResultado.setText(Double.toString(nr1 / nr2));
                //jTxtHistoria.setText(nr1+"/"+nr2);
                break;
            case 'N': //Funcion Raiz N    ↓    ↓    ↓    ↓    ↓
                jTxtResultado.setText(Double.toString((Math.pow(nr2, (1.0 / nr1)))));
                jTxtHistoria.setText(Math.round(nr1) + "√" + Math.round(nr2));
                break;
            case 'n': //Elevar a la potencia N
                jTxtResultado.setText(Double.toString(Math.pow(nr1, nr2)));
                jTxtHistoria.setText(Math.round(nr1) + "^" + Math.round(nr2));
                break;
            case '%'://Funcion Porcentaje    ↓    ↓    ↓    ↓    ↓
                jTxtResultado.setText(Double.toString(nr2 * (nr1 / 100)));
                break;
            case 'r'://Funcion Residuo   ↓    ↓    ↓    ↓    ↓
                jTxtResultado.setText(Double.toString(nr1 % nr2));
                jTxtHistoria.setText("Residuo de " + nr1 + " Entre " + nr2);
                break;//Sirve para terminar el bucle
            case 'L'://Funcion Porcentaje    ↓    ↓    ↓    ↓    ↓            

                int nr2 = Integer.parseInt(jTxtHistoria.getText());

                jTxtResultado.setText(Double.toString((log(nr1, nr2))));
                jTxtHistoria.setText("LOG" + nr2 + " " + nr1);
                break;//Sirve para terminar el bucle
                
                
        }
    }//GEN-LAST:event_jBtnIgualActionPerformed

//BOTON Resta    ↓    ↓    ↓    ↓    ↓    ↓    ↓
    private void jBtnRestarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRestarActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = '-';
        }

        jTxtHistoria.setText("");
    }//GEN-LAST:event_jBtnRestarActionPerformed

//BOTON Dividir    ↓    ↓    ↓    ↓    ↓
    private void jBtnDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDivisionActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = '/';
        }

        jTxtHistoria.setText("");
    }//GEN-LAST:event_jBtnDivisionActionPerformed

//BOTON Raiz N   ↓    ↓    ↓    ↓    ↓
    private void jBtnRaizNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRaizNActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            operador = 'N';
        }

        jTxtHistoria.setText("");
        //        nr1 = Double.parseDouble(jTxtHistoria.getText());
        //        jTxtHistoria.setText(String.valueOf(Math.pow(nr1, nr2)));
    }//GEN-LAST:event_jBtnRaizNActionPerformed

    private void jBtnCosecanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCosecanteActionPerformed
            if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
    //SE ESTA USANDO EL PAQUETE MATH PARA HALLAR LA COSECANTE
    //DE LA SIGUIENTE MANERA, LA COSECANTE = 1/SENO()
        nr1 = Double.parseDouble(jTxtHistoria.getText());
        double b = Math.toRadians(nr1);//Variable que ayuda a convertir nr1 a una COSECANTE
        jTxtResultado.setText(Double.toString(1/Math.sin(b)));
        }
    }//GEN-LAST:event_jBtnCosecanteActionPerformed

    private void jBtnCotangenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCotangenteActionPerformed
       if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
    //SE ESTA USANDO EL PAQUETE MATH PARA HALLAR LA COTANGENTE
    //POR FORMULA LA COTANGENTE = 1 / TANGENTE() , QUE TAMBIEN PUEDE SER COS()/SEN(), PERO MAS PRACTICO ES LA PRIMERA OPCION :D
        nr1 = Double.parseDouble(jTxtHistoria.getText());
        double b = Math.toRadians(nr1);//Variable que ayuda a convertir nr1 a una cotangente
        jTxtResultado.setText(Double.toString(1/Math.tan(b)));
        }
    }//GEN-LAST:event_jBtnCotangenteActionPerformed

    private void jBtnTangenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTangenteActionPerformed
           if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
    //SE ESTA USANDO EL PAQUETE MATH PARA HALLAR LA TANGENTE
        nr1 = Double.parseDouble(jTxtHistoria.getText());
        double b = Math.toRadians(nr1);//Variable que ayuda a convertir nr1 a una tangente
        jTxtResultado.setText(Double.toString(Math.tan(b)));
        }
    }//GEN-LAST:event_jBtnTangenteActionPerformed

    private void jBtnSecanteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSecanteActionPerformed
         if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
    //SE ESTA USANDO EL PAQUETE MATH PARA HALLAR LA SECANTE
    //POR FORMULA, SECANTE= 1 / COSENO()
        nr1 = Double.parseDouble(jTxtHistoria.getText());
        double b = Math.toRadians(nr1);//Variable que ayuda a convertir nr1 a una Secante
        jTxtResultado.setText(Double.toString(1/Math.cos(b)));
        }
    }//GEN-LAST:event_jBtnSecanteActionPerformed

    private void jBtnSenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSenoActionPerformed
      if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {  
        nr1 = Double.parseDouble(jTxtHistoria.getText());
//        jTxtResultado.setText(Integer.toString(nr1));      
//        jTxtHistoria.setText(String.valueOf(Math.sin(nr1)));

        double b = Math.toRadians(nr1);//Variable que ayuda a convertir nr1 a un Seno
       
//    double k9 = Math.sin(Math.sin(90));
//    jTxtResultado.setText(Double.toString(k9));
       jTxtResultado.setText(Double.toString(Math.sin(b)));
      }
    }//GEN-LAST:event_jBtnSenoActionPerformed

    private void jBtnCosenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCosenoActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
    //SE ESTA USANDO EL PAQUETE MATH PARA HALLAR EL COSENO
        nr1 = Double.parseDouble(jTxtHistoria.getText());
        double b = Math.toRadians(nr1);//Variable que ayuda a convertir nr1 a un Coseno
        jTxtResultado.setText(Double.toString(Math.cos(b)));
        }
    }//GEN-LAST:event_jBtnCosenoActionPerformed

    private void jBtnLogaritmoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLogaritmoActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            nr1 = Double.parseDouble(jTxtHistoria.getText());

            operador = 'L';
            jTxtHistoria.setText("");

        }


    }//GEN-LAST:event_jBtnLogaritmoActionPerformed
    private static Double log(double num, int base) {
        return (Math.log10(num) / Math.log10(base));//Esto es la funcion de retorno para el algoritmo
    }
    private static Double log2(double num) {
        return (Math.log10(num) );//Esto es la funcion de retorno para el algoritmoGAFO 
    }
    private void jBtnValorAbsolutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnValorAbsolutoActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            /*
             *VALOR ABSOLUTO ES EL NUMERO PERO SIN SINGNO + O -
             *Ejemplo 
             *valor absoluto de 5 = |5|
             *valor absoluto de -5 = |5|
             *
             *ASI DE FACIL
             */

            nr1 = Double.parseDouble(jTxtHistoria.getText());
            if (nr1 >= 0) {//Si nr1 es mayor o igual que 0 entonces
                jTxtResultado.setText("| " + (Integer.toString((int) Math.round(nr1))) + " |");
            } else { //Si nr1 es menor que 0 entonces es negativo
                nr1 = nr1 * (-1);//PARA PASARLO A POSITIVO
                jTxtResultado.setText("| " + (Integer.toString((int) Math.round(nr1))) + " |");
                //Si el numero tiene decimales, se le asignara como valor absoluto al numero entero mas cercano
            }

        }
    }//GEN-LAST:event_jBtnValorAbsolutoActionPerformed

    private void jBtnLogaritmoPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLogaritmoPIActionPerformed
         if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
             //VARIABLES PARA QUE FUNCIONE EL NEPERIANO
           int nr1 = Integer.parseInt(jTxtHistoria.getText());
           double neperiano=2.71828;//e = numero neperiano que es un aproximado de 2.7172 por el PAQUETE MATH
           double pi=3.141592;//
           
           //IMPRIMIR EL NEPERIANO
                jTxtResultado.setText(Double.toString((log(neperiano,nr1))));
                jTxtHistoria.setText("Ln(pi)"  + " " + nr1);
                

        }
    }//GEN-LAST:event_jBtnLogaritmoPIActionPerformed

    private void jBtnFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnFactorialActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            int nr1 = Integer.parseInt(jTxtHistoria.getText());
            int factorial = 1; //VARIABLE FACT 
            for (int i = 1; i <= nr1; i++) {
                factorial *= i;
                jTxtResultado.setText(String.valueOf(factorial));
            }

        }
    }//GEN-LAST:event_jBtnFactorialActionPerformed

    private void jBtnCapicuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCapicuaActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            /*CAPICUA
             *Un numero se puede leer igual de derecha a izquierda que de izquierda a derecha.
             * Ejemplos de números capicuas: 11, 22, 33, 44, 121, 3003, 1234321, 33, 445544.
             */
            int nr1 = Integer.parseInt(jTxtHistoria.getText());
            int cifra = 0, inverso = 0;

            int Tmp_nr1 = nr1;//Para evitar errores (Ya que siempre el valor era 0), Tmp_nr1 significa una variable TEMPORAL con el mismo valor nr1.
            int numeroInvertido = 0; //Esta variable es donde se va a almacenar el numero invertido
            int restante = 0;

            while (Tmp_nr1 != 0) { // Tmp_nr1 debe ser diferente a cero, aqui se invierte el numero para luego verificar si es capicua
                restante = Tmp_nr1 % 10;
                numeroInvertido = numeroInvertido * 10 + restante;
                Tmp_nr1 = Tmp_nr1 / 10;
            }
            //Aqui se  verifica si es capicua
            if (numeroInvertido == nr1) {//Si es capicua cuando el numeroInvertido sea igual que nr1
                jTxtResultado.setText(String.valueOf("ES CAPICUA "));
            } else {//no si es capicua
                jTxtResultado.setText(String.valueOf("NO ES CAPICUA ")); //+ numero + nr1
            }

        }
    }//GEN-LAST:event_jBtnCapicuaActionPerformed

    private void jBtnFibonacciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnFibonacciActionPerformed
        /*Es una secuencia ordenada de números 
         *En resumidas palabras, funciona 
         *Cada número se calcula sumando los dos anteriores a este.
         *
         *Un ejemplo, 0, 1, 1, 2, 3, 5, 8, 13, 21, 34
         *
         *Empezemos por el 2, el 2 se obtiene sumando los dos números anteriores (1+1)
         *Ahora el 3, el 3 se obtiene sumando los dos números anteriores (1+2)
         *el 5 se obtiene sumando los dos números anteriores (2+3)
         *el 8 se obtiene sumando los dos números anteriores (3+5)
         *el 13 se obtiene sumando los dos números anteriores (5+8)
         *el 21 se obtiene sumando los dos números anteriores (8+13)
         *
         *Y ASI SUCESIVAMENTE...
         */
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            jTxtResultado.setText(String.valueOf(""));
            int nr1 = Integer.parseInt(jTxtHistoria.getText());

            int Nrofibo1 = 1, Nrofibo2 = 1, CantFibo;//Variables, CantFibo se usara si es que se quiere saber la cantidad de numeros fibonacci

            jTxtResultado.setText(jTxtResultado.getText() + 0 + "  " + Nrofibo1 + "  ");// 0 y 1 siempre van a estar al comienzo

            for (int i = 2; i <= nr1; i++) {

                //jTxtResultado.setText(String.valueOf(fibo2 + " "));
                jTxtResultado.setText(jTxtResultado.getText() + Nrofibo2 + "  ");
                Nrofibo2 = Nrofibo1 + Nrofibo2;
                Nrofibo1 = Nrofibo2 - Nrofibo1;

                //SI SOLO SE QUIERE LA CANTIDAD DE NUMEROS FIBONACCI, DESCOMENTAR LO ES EL SIGUIENTE, i es la cantidad
                //jTxtResultado.setText(Integer.toString(i+2));
            }

        }
    }//GEN-LAST:event_jBtnFibonacciActionPerformed

    private void jBtnPerfectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPerfectoActionPerformed
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            /*NUMERO PERFECTO 
             *Los números perfectos son aquellos iguales a la suma de sus divisores
             *Ejemplo : 6 se puede dividir por 1, 2 y 3, y cuando sumas esos números, el resultado es 6.
             */
            nr1 = Double.parseDouble(jTxtHistoria.getText());
            int suma = 0;
            for (int i = 1; i < nr1; i++) {  // i son los divisores. Se divide desde 1 hasta n-1                            
                if (nr1 % i == 0) {
                    suma = suma + i; // si es divisor se suma
                }
            }
            if (suma == nr1) {// si el numero es igual a la suma de sus divisores es perfecto                
                jTxtResultado.setText(String.valueOf("ES PERFECTO"));
            } else {
                jTxtResultado.setText(String.valueOf("NO ES PERFECTO"));

            }

        }
    }//GEN-LAST:event_jBtnPerfectoActionPerformed

    private void jBtnPrimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPrimoActionPerformed
        //NUMEROS PRIMOS 
        //tieneM únicamente dos divisores : él mismo y el 1.
        //Así que todos los números enteros excepto 0 y 1 son primos
        if (jTxtHistoria.getText() != "")//Esto para que no se ejecute cuando no hay nada adentro y evitar errores
        {
            {
                nr1 = Double.parseDouble(jTxtHistoria.getText());
                boolean CompobarPrimo = false;//BOOLEAN solo dara dos valores, "true" o "false", funciona como un interruptor.
                if (nr1 == 2 || nr1 == 3) {
                    jTxtResultado.setText(String.valueOf("ES PRIMO"));
                }
                if (nr1 == 0 || nr1 == 1) {//Así que todos los números enteros excepto 0 y 1 son primos

                    jTxtResultado.setText(String.valueOf("NO ES PRIMO"));
                } else { //si no, solo revisa los impares
                    for (int i = 2; i <= nr1 / 2; ++i) {

                        if (nr1 % i == 0) {

                            CompobarPrimo = true;
                            jTxtResultado.setText(String.valueOf("NO ES PRIMO"));
                            break; //Sirve para terminar el bucle
                        } else {
                            jTxtResultado.setText(String.valueOf("ES PRIMO"));
                        }
                    }
                }

//            nr1 = Double.parseDouble(jTxtHistoria.getText());
//
//            if (nr1 % 2 == 0) {
//                jTxtResultado.setText(String.valueOf("NO ES PRIMO"));
//            } //si no, solo revisa los impares
//            else {
//                for (int i = 3; i * i <= nr1; i += 2) {
//                    if (nr1 % i == 0) {
//                        jTxtResultado.setText(String.valueOf("ES PRIMO"));;
//                    }}
            }
        }
    }//GEN-LAST:event_jBtnPrimoActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        setResizable(true);
        setSize(1200, 653);
        jTxtHistoria.setSize(1, 1);
        jTxtResultado.setSize(1, 1);
        jLabelPanelHistoriaYResultado.setSize(1, 1);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuRifaCovidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuRifaCovidActionPerformed
        RifaCovid rifa = new RifaCovid();
        rifa.setVisible(true);


    }//GEN-LAST:event_jMenuRifaCovidActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        
        RifaCovid rifa = new RifaCovid();
        rifa.setVisible(true);
        setResizable(true);
        setSize(1150, 553);
        //Esto llama a Rifa Covid y lo mostrara en la pantalla
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuNuevoBingoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuNuevoBingoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuNuevoBingoActionPerformed

    private void jMenuBingoAmericanoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuBingoAmericanoActionPerformed
        BINGO bingo = new BINGO();
        bingo.setVisible(true);
    }//GEN-LAST:event_jMenuBingoAmericanoActionPerformed

    private void jMenuConvertidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuConvertidorActionPerformed
        ConvertidorPrueba convert = new ConvertidorPrueba();
        convert.setVisible(true);
    }//GEN-LAST:event_jMenuConvertidorActionPerformed

//BOTON PUNTO .  ↓    ↓    ↓    ↓    ↓
    //BOTON PORCENTAJE   ↓    ↓    ↓    ↓    ↓ 
    //BOTON PORCENTAJE   ↓    ↓    ↓    ↓    ↓ 
    //BOTON PORCENTAJE   ↓    ↓    ↓    ↓    ↓ 
    //BOTON PORCENTAJE   ↓    ↓    ↓    ↓    ↓ 
    //BOTON PORCENTAJE   ↓    ↓    ↓    ↓    ↓ 
    //BOTON PORCENTAJE   ↓    ↓    ↓    ↓    ↓ 
    //BOTON Raiz N   ↓    ↓    ↓    ↓    ↓
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn0;
    private javax.swing.JButton jBtn1;
    private javax.swing.JButton jBtn2;
    private javax.swing.JButton jBtn3;
    private javax.swing.JButton jBtn4;
    private javax.swing.JButton jBtn5;
    private javax.swing.JButton jBtn6;
    private javax.swing.JButton jBtn7;
    private javax.swing.JButton jBtn8;
    private javax.swing.JButton jBtn9;
    private javax.swing.JButton jBtnCapicua;
    private javax.swing.JButton jBtnCosecante;
    private javax.swing.JButton jBtnCoseno;
    private javax.swing.JButton jBtnCotangente;
    private javax.swing.JButton jBtnDivision;
    private javax.swing.JButton jBtnFactorial;
    private javax.swing.JButton jBtnFibonacci;
    private javax.swing.JButton jBtnIgual;
    private javax.swing.JButton jBtnLimpiar;
    private javax.swing.JButton jBtnLimpiarUno;
    private javax.swing.JButton jBtnLogaritmo;
    private javax.swing.JButton jBtnLogaritmoPI;
    private javax.swing.JButton jBtnMasMenos;
    private javax.swing.JButton jBtnMultiplicar;
    private javax.swing.JButton jBtnPerfecto;
    private javax.swing.JButton jBtnPorcentaje;
    private javax.swing.JButton jBtnPotencia2;
    private javax.swing.JButton jBtnPotenciaN;
    private javax.swing.JButton jBtnPrimo;
    private javax.swing.JButton jBtnPunto;
    private javax.swing.JButton jBtnRaizN;
    private javax.swing.JButton jBtnResiduo;
    private javax.swing.JButton jBtnRestar;
    private javax.swing.JButton jBtnSecante;
    private javax.swing.JButton jBtnSeno;
    private javax.swing.JButton jBtnSumar;
    private javax.swing.JButton jBtnTangente;
    private javax.swing.JButton jBtnValorAbsoluto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jLabelPanelHistoriaYResultado;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuBingoAmericano;
    private javax.swing.JMenuItem jMenuCalculadoraBasica;
    private javax.swing.JMenuItem jMenuCalculadoraCientifica;
    private javax.swing.JMenu jMenuCalculadoraLogaritmica;
    private javax.swing.JMenu jMenuConvertidor;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuNuevoBingo;
    private javax.swing.JMenuItem jMenuNuevoConvertidos;
    private javax.swing.JMenu jMenuRifaCovid;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCientifico;
    private javax.swing.JPanel jPanelNumeros;
    private javax.swing.JPanel jPanelOperacionesBasicas;
    private javax.swing.JLabel jTxtHistoria;
    private javax.swing.JLabel jTxtResultado;
    // End of variables declaration//GEN-END:variables
}
